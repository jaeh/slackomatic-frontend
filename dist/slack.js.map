{"version":3,"sources":["../src/slack.js"],"names":[],"mappings":";;;;IAAO,OAAO,2BAAM,SAAS;;IACrB,GAAG,WAAO,MAAM,EAAhB,GAAG;;IACH,IAAI,WAAO,MAAM,EAAjB,IAAI;;IACL,OAAO,2BAAM,eAAe;;IAC5B,MAAM,2BAAM,QAAQ;;IACpB,MAAM,2BAAM,QAAQ;;IACE,OAAO,WAAO,IAAI,EAAvC,iBAAiB;;IAClB,GAAG,2BAAM,WAAW;;IACpB,YAAY,2BAAM,oBAAoB;;AAE7C,IAAI,GAAG,GAAG,OAAO,EAAE;IACf,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC;IACpB,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE;IACnB,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC;IAC/B,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC;IAC/B,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC;IACzB,KAAK,GAAK,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,aAAa,AAAE,CAC/C;;AAED,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;;;AAGxC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;AACrC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;;AAE/B,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;;;AAIjD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;IACpC,SAAS,GAAG,OAAO,CAAC,OAAO,EAAE,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC;IAC1C,UAAU,GAAG;AACb,QAAM,EAAE,MAAM;AACd,QAAM,EAAE,SAAS;CAClB,CACF;AACD,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;;AAE5B,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACtC,GAAG,CAAC,GAAG,CAAC,OAAO,UAAO,CAAC,SAAS,CAAC,CAAC,CAAC;;;AAGnC,GAAG,CAAC,GAAG,CAAC,OAAO,UAAO,CAAC,SAAS,EAAE;AAChC,YAAU,EAAC,MAAM;CAClB,CAAE,CAAE,CAAC;;;AAGN,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;;;AAG7B,GAAG,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAK;AAC1B,MAAI,GAAG,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;AACjC,KAAG,CAAC,MAAM,GAAG,GAAG,CAAC;AACjB,MAAI,CAAC,GAAG,CAAC,CAAC;CACX,CAAC,CAAC;;;;;AAKH,IAAK,CAAE,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAG;AACxC,KAAG,GAAG,YAAY,CAAC;CACpB;AACD,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;;AAE3B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,YAAM;AAChC,SAAO,CAAC,GAAG,yCAAuC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAG,CAAC;CACtE,CAAC,CAAC","file":"src/slack.js","sourcesContent":["import express from 'express';\nimport {get} from 'http';\nimport {join} from 'path';\nimport favicon from 'serve-favicon';\nimport logger from 'morgan';\nimport stylus from 'stylus';\nimport {createWriteStream as wStream} from 'fs';\nimport api from './lib/api';\nimport errorHandler from './lib/errorHandler';\n\nvar app = express()\n  , env = app.get('env')\n  , cwd = process.cwd()\n  , staticDir = join(cwd, 'static')\n  , publicDir = join(cwd, 'public')\n  , logDir = join(cwd, 'log')\n  , debug = ( app.get('env') === 'development' )\n;\n\napp.set('port', process.env.PORT || 80);\n\n// view engine setup\napp.set('views', join(cwd, 'views'));\napp.set('view engine', 'jade');\n\napp.use(favicon(join(publicDir, 'favicon.ico')));\n\n\n//log into one file for now\nvar logFile = join(logDir, 'access.log')\n  , logStream = wStream(logFile, {flags: 'a'})\n  , logOptions = {\n    format: 'tiny'\n  , stream: logStream\n  }\n;\napp.use(logger(logOptions));\n\napp.use(stylus.middleware(publicDir));\napp.use(express.static(publicDir));\n\n//load static html files for now\napp.use(express.static(staticDir, {\n  extensions:'html'\n} ) );\n\n//slackomatic api redirect\napp.use('/slackomatic', api);\n\n/// catch 404 and forwarding to error handler\napp.use((req, res, next) => {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n/// error handlers\n// development error handler\n// will print stacktrace\nif ( ! errorHandler.hasOwnProperty(env) ) {\n  env = 'production';\n}\napp.use(errorHandler[env]);\n\napp.listen(app.get('port'), () => {\n  console.log(`Express server listening on port : ${app.get('port')}`);\n});\n\n"]}